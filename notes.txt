1.  $git init
2.  $git log
3.  $git status   #要查看哪些文件处于什么状态，可以用 git status 命令
4.  $git add XXX文件 #使用命令 git add 开始跟踪一个文件、或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等。
5.  $git diff   #要查看尚未暂存的文件更新了哪些部分，不加参数直接输入 git diff
6.  $git commit  #提交更新
     给 git commit 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤
7.  $git rm XXX文件   #从 Git 中移除某个文件
     我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。 使用git rm --cached 选项
8.  $git mv file_from file_to  #改文件名
9.  $git log   #提交更新的历史记录
     $git log -p -2    # -p，用来显示每次提交的内容差异 , -2 来仅显示最近两次提交  
     $git log --stat    #每次提交的简略的统计信息
                   --pretty #使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format
                   还有很多，链接：https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2
10.$git commit --amend  #将暂存区中的文件提交
     $git reset HEAD 文件名  #取消暂存
     $git checkout --文件名   #撤消修改 - 将它还原成上次提交时的样子
11.$git remote  #查看远程仓库  -v 可以看到对应的URL
12.$git remote add <shortname> <url>   # 添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写
13.$git fetch [remote-name]   #访问远程仓库，从中拉取所有你还没有的数据。 执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看
14.$git push [remote-name] [branch-name]  #把项目推送到远程仓库
15.$git remote show [remote-name]  #查看某一个远程仓库的更多信息，列出远程仓库的 URL 与跟踪分支的信息
16.$git remote rename [原仓库名] [新仓库名]  #修改一个远程仓库的简写名
     $git remote rm [仓库名]  #移除远程仓库
17.$git tag  #列出已存在标签
     $git tag -a [v1.0] -m 'my version 1.0' #添加附注标签
     $git show [v1.0]  #通过使用 git show 命令可以看到标签信息与对应的提交信息
     $git tag [v1.0]  #添加轻量标签
------------------------------------------分割线----------------------------------------------------------------------------
git分支
18.$git branch [分支名]  #创建分支
19.$git log --oneline --decorate  #查看各个分支当前所指的对象
     $git log --oneline --decorate --graph --all  #输出你的提交历史、各个分支的指向以及项目的分支分叉情况
20.$git checkout [分支名]  #分支切换
     $git checkout -b [分支名]  #把git branch 和 git checkout合起来，创建并转到新分支



